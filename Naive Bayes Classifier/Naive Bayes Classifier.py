# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X65xn7flnZwr6qVPvRA2rdy_ztEdTUgD
"""

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from sklearn.datasets import load_breast_cancer
from sklearn.metrics import confusion_matrix
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.metrics import classification_report

import seaborn as sns
sns.set()
breast_cancer = load_breast_cancer()
X = pd.DataFrame(breast_cancer.data, columns=breast_cancer.feature_names)
X = X[['worst area', 'worst smoothness']]
y=pd.Categorical.from_codes(breast_cancer.target,breast_cancer.target_names)
y=pd.get_dummies(y, drop_first=True)
dir(breast_cancer)
breast_cancer.feature_names
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=1)
gnb = GaussianNB()
gnb.fit(X_train, y_train)
y_pred = gnb.predict(X_test)
ass=accuracy_score(y_test, y_pred)
print('accuracy of the naive bayes classifier on the given breast cancer dataset is:',ass)

cm=confusion_matrix(y_test, y_pred)
print("confusion matrix :\n",cm)

report = classification_report(y_test, y_pred)
print('classification report:\n',report)
breast_cancer.feature_names

plt.plot(X_test, y_test, 'or')
plt.plot(X_test, y_test, '-', color='gray')


plt.xlim(0, 10);